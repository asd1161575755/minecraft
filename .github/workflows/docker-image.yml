name: Minecraft Docker Image CI

on:
  workflow_dispatch:
    inputs:
      LATEST_VERSION:
        description: '要构建的Minecraft版本；只打版本镜像且会跳过`检查版本是否更新`和`记录最后构建版本`步骤'
        required: false
        default: ''
        type: string
        
jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Get Minecraft and Forge Versions
        run: |
          PROMOTION_FILE=https://files.minecraftforge.net/net/minecraftforge/forge/promotions_slim.json
          # 获取 promotions_slim.json 中所有的版本信息
          ALL_VERSIONS=$(curl -s $PROMOTION_FILE | jq -r '.promos | keys[]' | grep -oP '^[0-9]+\.[0-9]+(\.[0-9]+)?')
          if [ "${{ github.event.inputs.LATEST_VERSION }}" = "" ]; then
            # 如果输入版本号为空，找到最大版本号
            MINECRAFT_VERSION=$(echo "$ALL_VERSIONS" | sort -V | tail -n 1)
          else
            # 如果用户输入了版本号，则使用输入的版本号
            MINECRAFT_VERSION=${{ github.event.inputs.LATEST_VERSION }}
          fi
          # 获取对应 Minecraft 版本的最新 Forge 版本
          FORGE_VERSION=$(curl -s $PROMOTION_FILE | jq -r --arg VER "$MINECRAFT_VERSION" '.promos[$VER + "-latest"]')
          # 如果找不到对应的 Forge 版本，则报错
          if [ "$FORGE_VERSION" = "null" ]; then
            echo "Error: No Forge version available for Minecraft $MINECRAFT_VERSION"
            exit 1
          fi
          # 打印信息
          echo "Using Minecraft version: $MINECRAFT_VERSION"
          echo "Using Forge version: $FORGE_VERSION"
          echo "MINECRAFT_VERSION=$MINECRAFT_VERSION" >> $GITHUB_ENV
          echo "FORGE_VERSION=$FORGE_VERSION" >> $GITHUB_ENV
